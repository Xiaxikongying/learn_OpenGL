#version 330 core
out vec4 FragColor;

in vec2 outTexCoord;
uniform sampler2D image; //高亮光纹理
uniform bool horizontal; //true-水平模糊;  false-垂直模糊

//高斯核权重
uniform float weight[5] = float[] (0.2270270270, 0.1945945946, 0.1216216216, 0.0540540541, 0.0162162162);

void main() 
{
  vec2 tex_offset = 1.0 / textureSize(image, 0); // 获取单个像素的大小
  vec3 result = texture(image, outTexCoord).rgb * weight[0]; //当前像素颜色乘 中心权重weight[0]
  if(horizontal) //如果是垂直模糊
  {
    for(int i = 1; i < 5; ++i) 
    {
      //向左右采样四个像素
      result += texture(image, outTexCoord + vec2(tex_offset.x * i, 0.0)).rgb * weight[i];
      result += texture(image, outTexCoord - vec2(tex_offset.x * i, 0.0)).rgb * weight[i];
    }
  } 
  else //如果是水平模糊
  {
    for(int i = 1; i < 5; ++i) 
    {
      //向上下采样四个像素
      result += texture(image, outTexCoord + vec2(0.0, tex_offset.y * i)).rgb * weight[i];
      result += texture(image, outTexCoord - vec2(0.0, tex_offset.y * i)).rgb * weight[i];
    }
  }
  //返回模糊后的颜色
  FragColor = vec4(result, 1.0);
}